# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'Site_Stripe_Scraper.ui'
#
# Created by: PyQt5 UI code generator 5.15.1
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from webbot import Browser
from bs4 import BeautifulSoup
from csv import writer
from csv import reader
import time, threading

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(693, 132)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setGeometry(QtCore.QRect(450, 10, 231, 81))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.pushButton.setFont(font)
        self.pushButton.setObjectName("pushButton")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(7, 70, 81, 21))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.label.setFont(font)
        self.label.setObjectName("label")
        self.lblcurrent = QtWidgets.QLabel(self.centralwidget)
        self.lblcurrent.setGeometry(QtCore.QRect(100, 70, 81, 21))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.lblcurrent.setFont(font)
        self.lblcurrent.setText("")
        self.lblcurrent.setObjectName("lblcurrent")
        self.txtusername = QtWidgets.QLineEdit(self.centralwidget)
        self.txtusername.setGeometry(QtCore.QRect(100, 10, 321, 20))
        self.txtusername.setObjectName("txtusername")
        self.txtpassword = QtWidgets.QLineEdit(self.centralwidget)
        self.txtpassword.setGeometry(QtCore.QRect(100, 40, 321, 20))
        self.txtpassword.setObjectName("txtpassword")
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(20, 10, 81, 21))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.label_2.setFont(font)
        self.label_2.setObjectName("label_2")
        self.label_3 = QtWidgets.QLabel(self.centralwidget)
        self.label_3.setGeometry(QtCore.QRect(24, 40, 81, 21))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.label_3.setFont(font)
        self.label_3.setObjectName("label_3")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 693, 21))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
        self.pushButton.clicked.connect(self.StartScraping)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Amazon Site Stripe Sraper"))
        self.pushButton.setText(_translate("MainWindow", "Start"))
        self.label.setText(_translate("MainWindow", "Processing: "))
        self.label_2.setText(_translate("MainWindow", "Username:"))
        self.label_3.setText(_translate("MainWindow", "Password:"))
    
    
    def StartScraping(self):
        # Login to amazon account
        username = self.txtusername.text()
        password = self.txtpassword.text()
        web = Browser()
        web.go_to('https://affiliate-program.amazon.com/home/promohub/promocodes?ac-ms-src=nav&type=mpc&active_date_range=0')
        web.type(username , into='Username' , id='ap_email')
        web.type(password , into='Password' , id='ap_password')
        web.click(classname='a-button-inner') # you are logged in . oohoooo
        time.sleep(60)
		#end login

		# Reading CSV file
		
# Open the input_file in read mode and output_file in write mode
       	with open('product-data-input.csv', 'r') as read_obj, \
        		open('product-data-output.csv', 'w', newline='') as write_obj:
    # Create a csv.reader object from the input file object    		
            csv_reader = reader(read_obj)
    # Create a csv.writer object from the output file object
            csv_writer = writer(write_obj)
            line_count = 0
    # Read each row of the input csv file as list
            for row in csv_reader:
                if line_count == 0:
                    row.append("Full URL")
                    csv_writer.writerow(row)
                    line_count += 1
        # Append the default text in the row / list
                else:
                    self.lblcurrent.setText(str(line_count))
                    web.go_to(row[4])
					# time.sleep(5)
                    content = web.get_page_source()
                    soup = BeautifulSoup(content)
                    samples = soup.find_all("a", {"class":"a-size-base-plus a-link-normal titleLink"})
                    link = "aasdf"
                    for tag in samples:
                        link = "https://www.amazon.com"+tag['href']
                        web.go_to(link)
                        break
                    time.sleep(5)
                    web.click( "Text", 'a')
                    time.sleep(3)
                    web.click( "Full Link", 'span')
                    content = web.get_page_source()
                    soup = BeautifulSoup(content)
                    samples = soup.find_all("textarea", {"class":"amzn-ss-text-fulllink-textarea"})
                    for textareas in samples:
                        row.append(textareas.text)
        # Add the updated row / list to the output file
                        csv_writer.writerow(row)
                        line_count += 1

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
